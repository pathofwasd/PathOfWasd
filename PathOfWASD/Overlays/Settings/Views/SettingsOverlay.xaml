<Window x:Class="PathOfWASD.Overlays.Settings.Views.SettingsOverlay"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:controls="clr-namespace:PathOfWASD.Overlays.Settings.Controls"
        xmlns:services="clr-namespace:PathOfWASD.Overlays.Settings.Services"
        xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
        xmlns:bgFunctionalities="clr-namespace:PathOfWASD.Overlays.BGFunctionalities"
        Title="Settings"
        Width="590" Height="1000"
        MinHeight="250"
        MinWidth="590"      
        MaxWidth="800"
        WindowStyle="None"
        AllowsTransparency="True"
        Background="Transparent"
        Topmost="True"
        ShowInTaskbar="False"
        ResizeMode="CanResizeWithGrip"
        Loaded="SettingsOverlay_Loaded"
        SizeChanged="SettingsOverlay_SizeChanged">

  <Window.Resources>
    <bgFunctionalities:EnumToBooleanConverter x:Key="EnumToBoolean"/>
    <bgFunctionalities:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter"/>
    <bgFunctionalities:BoolToTextConverter x:Key="BoolToText"/>
    
    <Style x:Key="TitleBarButtonStyle" TargetType="Button">
      <Setter Property="Width" Value="24"/>
      <Setter Property="Height" Value="24"/>
      <Setter Property="Background" Value="Transparent"/>
      <Setter Property="Foreground" Value="White"/>
      <Setter Property="FontSize" Value="16"/>
      <Setter Property="FontFamily" Value="Segoe MDL2 Assets"/>
      <Setter Property="BorderThickness" Value="0"/>
      <Setter Property="Cursor" Value="Hand"/>
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="Button">
            <Border Background="{TemplateBinding Background}" CornerRadius="2">
              <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
            </Border>
            <ControlTemplate.Triggers>
              <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#30FFFFFF"/>
              </Trigger>
              <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="#50FFFFFF"/>
              </Trigger>
            </ControlTemplate.Triggers>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>
  </Window.Resources>

  <Border Background="#C01E1E1E"
          CornerRadius="8"
          BorderBrush="White"
          BorderThickness="2"
          MouseLeftButtonDown="Border_MouseLeftButtonDown">

    <Grid>
      <Grid.RowDefinitions>
        <RowDefinition Height="36"/>
        <RowDefinition Height="*"/>
        <RowDefinition Height="Auto"/>
      </Grid.RowDefinitions>
      <Grid Grid.Row="0" Background="#DD2D2D2D">
        <TextBlock Text="Path of WASD Settings Overlay"
                   Tag="Welcome to Path of WASD!&#10;This overlay lets you configure WASD movement for Path of Exile.&#10;&#10;NOTE: Game MUST be in fullscreen borderless mode AND VSync MUST be on."
                                   HorizontalAlignment="Left"
                   Style="{StaticResource UnderlinedTextBlockStyle}"
                                   VerticalAlignment="Center"
                                   Margin="12,0,0,0"
                                   Foreground="White"
                                   FontSize="14"
                                   FontWeight="Bold"/>
        <StackPanel Orientation="Horizontal"
                    HorizontalAlignment="Right"
                    VerticalAlignment="Center"
                    Margin="0,0,8,0">
          <Button Style="{StaticResource TitleBarButtonStyle}"
                  Command="{Binding ToggleOverlayCommand}">
            <iconPacks:PackIconMaterial 
              Kind="WindowMinimize" 
              Width="16" 
              Height="16" />
          </Button>
          <Button Style="{StaticResource TitleBarButtonStyle}"
                  Click="MaxMinButton_Click"
                  >
            <iconPacks:PackIconMaterial Kind="WindowMaximize"
                                        Width="12" Height="12"/>
          </Button>
          <Button Style="{StaticResource TitleBarButtonStyle}"
                  Click="ExitButton_Click">    <iconPacks:PackIconMaterial Kind="Close"
                                                                           Width="12" Height="12"/></Button>
        </StackPanel>
      </Grid>
      <ScrollViewer Grid.Row="1"
                    Padding="8"
                    VerticalScrollBarVisibility="Auto"
                    Style="{StaticResource {x:Type ScrollViewer}}">
        <ScrollViewer.Resources>
          <Style TargetType="ScrollBar" BasedOn="{StaticResource ModernScrollBar}" />
        </ScrollViewer.Resources>
        <StackPanel>
          <Expander           Style="{StaticResource MaterialGroupExpander}" Header="Modes" IsExpanded="True" Foreground="White" Margin="0,0,0,16">
            <Expander.HeaderTemplate>
              <DataTemplate>
                <DockPanel>
                  <TextBlock Text="{Binding}" FontWeight="Bold" />
                </DockPanel>
              </DataTemplate>
            </Expander.HeaderTemplate>
            <Border Padding="8">            <Grid >
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>

              </Grid.ColumnDefinitions>
              <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>

              </Grid.RowDefinitions>
              <Grid Margin="0">
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="Auto"/>
                  <ColumnDefinition Width="140"/>
                  <ColumnDefinition Width="Auto"/>
                  <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                  <RowDefinition Height="Auto"/>
                  <RowDefinition Height="Auto"/>
                  <RowDefinition Height="Auto"/>
                  <RowDefinition Height="Auto"/>
                  <RowDefinition Height="Auto"/>

                </Grid.RowDefinitions>

                <TextBlock                     
                  Style="{StaticResource UnderlinedTextBlockStyle}" 
                  Tag="NoUnderline"
                                               Grid.Row="0" Grid.Column="0"
                                               Text="Toggle Settings Overlay:" VerticalAlignment="Center"/>

                <bgFunctionalities:KeyCaptureBox
                  Style="{StaticResource ModernTextBox}"

                  Grid.Row="0" Grid.Column="1"
                  Margin="10,0,0,4"
                  MinHeight="24"
                  SelectedKey="{Binding ToggleOverlayKey.DisplayKey, Mode=TwoWay}" />


                <TextBlock Grid.Row="1" Grid.Column="0"
                           Tag="Use WASD Mode for movement while keeping mouse aiming for skills and interactions."
                           Style="{StaticResource UnderlinedTextBlockStyle}" 
                           Text="Toggle WASD Mode:" VerticalAlignment="Center"/>

                <bgFunctionalities:KeyCaptureBox
                  Style="{StaticResource ModernTextBox}"

                  Grid.Row="1" Grid.Column="1"
                  Margin="10,0,0,4"
                  MinHeight="24"
                  SelectedKey="{Binding ToggleVisualCursorKey.DisplayKey, Mode=TwoWay}" />

                <TextBlock Tag="Hold to disable WASD Mode and regain normal mouse control."
                           Style="{StaticResource UnderlinedTextBlockStyle}" 
                           Grid.Row="2" Grid.Column="0"
                           Text="Hold Toggle WASD Mode:" VerticalAlignment="Center"/>

                <bgFunctionalities:KeyCaptureBox
                  Style="{StaticResource ModernTextBox}"

                  Grid.Row="2" Grid.Column="1"
                  Margin="10,0,0,0"
                  MinHeight="24"
                  SelectedKey="{Binding HoldToggleVisualCursorKey.DisplayKey, Mode=TwoWay}" />
              </Grid>
              
            </Grid>
            </Border>
          </Expander>
          
          <Expander           Style="{StaticResource MaterialGroupExpander}" Header="Movement" IsExpanded="True" Foreground="White" Margin="0,0,0,16">
            <Expander.HeaderTemplate>
              <DataTemplate>
                <DockPanel>
                  <TextBlock Text="{Binding}" FontWeight="Bold" />
                </DockPanel>
              </DataTemplate>
            </Expander.HeaderTemplate>
            <Border Padding="8">            <StackPanel>
              <Grid Margin="0,0,0,8">
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="Auto"/>
                  <ColumnDefinition Width="140"/>
                  <ColumnDefinition Width="Auto"/>
                  <ColumnDefinition Width="140"/>
                </Grid.ColumnDefinitions>
                
                <TextBlock Grid.Column="0"
                           Text="Stand Key:"
                           Tag="Select your POE ‘Attack in place’ key (Options → Input → Attack in place)."
                           Style="{StaticResource UnderlinedTextBlockStyle}" 
                           VerticalAlignment="Center"/>

                <bgFunctionalities:KeyCaptureBox
                  Style="{StaticResource ModernTextBox}"

                  Grid.Column="1"
                  Margin="10,0,0,4"
                  MinHeight="24"
                  SelectedKey="{Binding StandKey.DisplayKey, Mode=TwoWay}" />
                <TextBlock Grid.Row="0" Grid.Column="2"
                           Text="Movement Key:"
                           Tag="Use the same key as your bound ‘Move Only’ skill in POE."
                           Style="{StaticResource UnderlinedTextBlockStyle}" 
                           Margin="16,0,0,0"
                            VerticalAlignment="Center"/>

                <bgFunctionalities:KeyCaptureBox
                  Style="{StaticResource ModernTextBox}"

                  Grid.Row="0" Grid.Column="3"
                  Margin="10,0,0,4"
                  MinHeight="24"
                  SelectedKey="{Binding MovementKey.DisplayKey, Mode=TwoWay}" />

              </Grid>
              <Grid Margin="0,0,0,8">
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="Auto"/>
                  <ColumnDefinition Width="*"/>
                  <ColumnDefinition Width="Auto"/>
                  <ColumnDefinition Width="Auto"/>
                  <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>

              </Grid>
              <StackPanel>
                <Grid Margin="0,0,0,0">
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                  </Grid.ColumnDefinitions>
                  <TextBlock 
                    Text="Movement Offset:"
                    Tag="Controls how far the cursor moves per WASD: low stops, high overshoots."
                    Style="{StaticResource UnderlinedTextBlockStyle}" 
                    Grid.Column="0"  VerticalAlignment="Center"/>
                  <Slider Grid.Column="1"
                          Style="{StaticResource ModernSlider}"
                          Margin="8,0"
                          Minimum="50" Maximum="1000"
                          TickFrequency="50"
                          IsSnapToTickEnabled="True"
                          Value="{Binding MovementOffset, Mode=TwoWay}"/>
                  <TextBlock Grid.Column="2" Text="{Binding MovementOffset}" VerticalAlignment="Center" Margin="12,0,0,0"/>
                </Grid>
                <Grid Margin="0,10,0,6">
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                  </Grid.ColumnDefinitions>

                  <TextBlock
                    Style="{StaticResource UnderlinedTextBlockStyle}" 
                    Tag="NoUnderline"
                    Grid.Column="0"
                             Text="Virtual Mouse Sensitivity:"
                             VerticalAlignment="Center"/>

                  <Slider Grid.Column="1"
                          Style="{StaticResource ModernSlider}"
                          Margin="8,0"
                          Minimum="0" Maximum="10000"
                          TickFrequency="50"
                          IsSnapToTickEnabled="True"
                          Value="{Binding Sensitivity, Mode=TwoWay}"/>

                  <TextBlock Grid.Column="2"
                             Text="{Binding Sensitivity}"
                             VerticalAlignment="Center"
                             Margin="12,0,0,0"/>
                </Grid>
              </StackPanel>
            </StackPanel>
            </Border>
          </Expander>
          <Expander           Style="{StaticResource MaterialGroupExpander}" IsExpanded="True" Foreground="White" Margin="0,0,0,16">
            <Expander.Header>
              <TextBlock
                Style="{StaticResource UnderlinedTextBlockStyle}"
                Text="Mapped Mouse Alt Keys"
                Tag="Hold the ‘Toggle Mouse Alt Key’ to map mouse clicks to your chosen keyboard keys, simulating Alt-bar (secondary skill bar) use with mouse buttons."
                />
            </Expander.Header>
            <Expander.HeaderTemplate>
              <DataTemplate>
                <DockPanel>
                  <TextBlock Text="{Binding}" FontWeight="Bold" />
                </DockPanel>
              </DataTemplate>
            </Expander.HeaderTemplate>
            <Border Padding="8">
              <StackPanel  Margin="0,0,0,0">
                <Grid>
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="120"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="140"/>
                  </Grid.ColumnDefinitions>
                  <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>

                  </Grid.RowDefinitions>
                  <TextBlock Grid.Row="3" Grid.Column="0" Grid.ColumnSpan="2" Text="Hold Toggle Mouse Alt Key:" VerticalAlignment="Center"
                             Tag="Hold this key to map mouse clicks to the keyboard keys configured in this menu instead of actual clicks."
                             Style="{StaticResource UnderlinedTextBlockStyle}" />
                  <bgFunctionalities:KeyCaptureBox
                    Style="{StaticResource ModernTextBox}"

                    Grid.Column="3" Grid.Row="3"
                    Margin="10,0,10,4"
                    MinHeight="24"
                    SelectedKey="{Binding HoldToggleAltKey.DisplayKey, Mode=TwoWay}" />
              
                  <CheckBox Grid.Row="4" Grid.Column="0" Grid.ColumnSpan="2"
                            Foreground="White"
                            IsChecked="{Binding InvertAltMode, Mode=TwoWay}"
                            Style="{StaticResource ModernCheckBox}"
                            Margin="0,5,0,0">
                    <CheckBox.Content>
                      <TextBlock
                        Style="{StaticResource UnderlinedTextBlockStyle}"
                        Text="Reverse Mouse Alt Key Functionality"
                        Tag="Reverses Toggle Mouse Alt: mouse clicks always send the configured keys in WASD mode; holding Toggle Mouse Alt restores normal clicks.&#10;&#10;Useful for mapping left click to a skill key without holding Alt, while real clicks still move and pick up loot seamlessly." />
                    </CheckBox.Content>
                  </CheckBox>
                  <TextBlock
                    Tag="While holding ‘Toggle Mouse Alt Key’, left clicks send the chosen key instead of real clicks—useful for alternate moves. Make sure this key matches the skill you’ve bound on your bar."
                    Style="{StaticResource UnderlinedTextBlockStyle}" 
                    Grid.Row="1" Grid.Column="0"
                             Text="Left Alt Click:" VerticalAlignment="Center"/>

                  <bgFunctionalities:KeyCaptureBox
                    Style="{StaticResource ModernTextBox}"

                    Grid.Column="1" Grid.Row="1"
                    Margin="10,0,10,4"
                    MinHeight="24"
                    SelectedKey="{Binding LeftKey.DisplayKey, Mode=TwoWay}" />
                  <TextBlock Grid.Row="1" Grid.Column="2"
                             Tag="While holding ‘Toggle Mouse Alt Key’, right clicks send the chosen key instead of real clicks—useful for alternate moves. Make sure this key matches the skill you’ve bound on your bar."
                             Style="{StaticResource UnderlinedTextBlockStyle}" 
                             Text="Right Alt Click:" VerticalAlignment="Center"/>

                  <bgFunctionalities:KeyCaptureBox
                    Style="{StaticResource ModernTextBox}"

                    Grid.Column="3" Grid.Row="1"
                    Margin="10,0,10,4"
                    MinHeight="24"
                    SelectedKey="{Binding RightKey.DisplayKey, Mode=TwoWay}" />
                  <TextBlock Grid.Row="2" Grid.Column="2"
                             Tag="While holding ‘Toggle Mouse Alt Key’, middle clicks send the chosen key instead of real clicks—useful for alternate moves. Make sure this key matches the skill you’ve bound on your bar."
                             Style="{StaticResource UnderlinedTextBlockStyle}" 
                             Text="Middle Alt Click:" VerticalAlignment="Center"/>

                  <bgFunctionalities:KeyCaptureBox
                    Style="{StaticResource ModernTextBox}"

                    Grid.Column="3" Grid.Row="2"
                    Margin="10,0,10,4"
                    MinHeight="24"
                    SelectedKey="{Binding MiddleKey.DisplayKey, Mode=TwoWay}" />
                </Grid>
              </StackPanel>
            </Border>
          </Expander>
          <Expander           Style="{StaticResource MaterialGroupExpander}" IsExpanded="True" Foreground="White" Margin="0,0,0,16">
            <Expander.Header>
              <TextBlock
                Style="{StaticResource UnderlinedTextBlockStyle}"
                Text="Skill Keys"
                Tag="These keys map to your in-game skill binds. Binding Q will also trigger Alt+Q—no combo binds needed."
                />
            </Expander.Header>
            <Expander.HeaderTemplate>
              <DataTemplate>
                <DockPanel>
                  <TextBlock Text="{Binding}" FontWeight="Bold" />
                </DockPanel>
              </DataTemplate>
            </Expander.HeaderTemplate>
            <Border Padding="8">
<StackPanel>            <StackPanel>

              <Button Style="{StaticResource ModernButton}" Content="＋ Add Skill Key" Width="120" Command="{Binding AddToggleEntryCommand}"/>
              <ItemsControl ItemsSource="{Binding ToggleEntries}">
                <ItemsControl.ItemTemplate>
                  <DataTemplate>
                    <controls:ToggleKeyRowControl/>
                  </DataTemplate>
                </ItemsControl.ItemTemplate>
              </ItemsControl>
            </StackPanel>
              </StackPanel>
            </Border>
          </Expander>
          <Expander           Style="{StaticResource MaterialGroupExpander}" IsExpanded="False" Foreground="White" Margin="0,0,0,16">
            <Expander.Header>
              <TextBlock
                Style="{StaticResource UnderlinedTextBlockStyle}"
                Text="Cursor Visibility while in WASD Mode"
                Tag="Controls whether your real cursor is shown in WASD Mode. Hiding it is best for gameplay; showing it is useful for testing or to see actual cursor position (e.g. to debug click offsets)." 
                />
            </Expander.Header>
            <Expander.HeaderTemplate>
              <DataTemplate>
                <DockPanel>
                  <TextBlock Text="{Binding}" FontWeight="Bold" />
                </DockPanel>
              </DataTemplate>
            </Expander.HeaderTemplate>
            <Border Padding="8">            <StackPanel>
              <RadioButton Content="Always show real cursor"
                           Foreground="White"
                           Style="{StaticResource ModernRadioButton}"
                           GroupName="CursorVisibility"
                           IsChecked="{Binding CursorMode, Converter={StaticResource EnumToBoolean}, ConverterParameter=AlwaysShow}" />
              <RadioButton Content="Always hide real cursor"
                           Foreground="White"
                           Style="{StaticResource ModernRadioButton}"
                           GroupName="CursorVisibility"
                           IsChecked="{Binding CursorMode, Converter={StaticResource EnumToBoolean}, ConverterParameter=AlwaysHide}" />
              <RadioButton Content="Show real cursor during skills"
                           Foreground="White"
                           Style="{StaticResource ModernRadioButton}"
                           GroupName="CursorVisibility"
                           IsChecked="{Binding CursorMode, Converter={StaticResource EnumToBoolean}, ConverterParameter=ShowDuringSkills}" />
            </StackPanel>
            </Border>
          </Expander>
          
          <Expander           Style="{StaticResource MaterialGroupExpander}" IsExpanded="False" Foreground="White" Margin="0,0,0,16">
            <Expander.Header>
              <TextBlock
                Style="{StaticResource UnderlinedTextBlockStyle}"
                Text="Mid Point Setting"
                Tag="Sets the cursor’s center in WASD Mode (default between your character’s feet). Adjust only if movement drifts diagonally or when playing windowed."
                />
            </Expander.Header>
            <Expander.HeaderTemplate>
              <DataTemplate>
                <DockPanel>
                  <TextBlock Text="{Binding}" FontWeight="Bold" />
                </DockPanel>
              </DataTemplate>
            </Expander.HeaderTemplate>
            <Border Padding="8">

              <StackPanel>
<StackPanel>
              <Grid>
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="Auto"/>
                  <ColumnDefinition Width="80"/>
                  <ColumnDefinition Width="Auto"/>
                  <ColumnDefinition Width="Auto"/>
                  <ColumnDefinition Width="50"/>
                  <ColumnDefinition Width="Auto"/>
                  <ColumnDefinition Width="Auto"/>
                  <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                  <RowDefinition Height="Auto"/>
                  <RowDefinition Height="Auto"/>
                  <RowDefinition Height="Auto"/>
                  <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <TextBlock                   Style="{StaticResource UnderlinedTextBlockStyle}" 
                                             Tag="NoUnderline" Grid.Column="0" Grid.Row="0" Text="{Binding EnableSetMidpoint, Converter={StaticResource BoolToText}, ConverterParameter='Disable Midpoint Setter:|Enable Midpoint Setter:'}" VerticalAlignment="Center" Margin="0,0,0,0"/>
                <bgFunctionalities:KeyCaptureBox
                  Style="{StaticResource ModernTextBox}"
                  Grid.Row="0"
                  Grid.Column="1"
                  Margin="10,4,0,4"
                  MinHeight="24"
                  SelectedKey="{Binding EnableSetMidpointKey.DisplayKey, Mode=TwoWay}" />


                <TextBlock Grid.Column="0" Grid.Row="1"
                           Style="{StaticResource UnderlinedTextBlockStyle}" 
                           Tag="NoUnderline"
                           Text="Teleport to Midpoint:" VerticalAlignment="Center" Visibility="{Binding EnableSetMidpoint, Converter={StaticResource BoolToVisibilityConverter}}"/>
                <bgFunctionalities:KeyCaptureBox
                  Style="{StaticResource ModernTextBox}"

                  Grid.Row="1"
                  Grid.Column="1"
                  Margin="10,4,0,4"
                  MinHeight="24"
                  SelectedKey="{Binding TeleportMidpointKey.DisplayKey, Mode=TwoWay}"
                  Visibility="{Binding EnableSetMidpoint, Converter={StaticResource BoolToVisibilityConverter}}"/>
                
                <TextBlock Grid.Column="0" Grid.Row="2"
                           Margin="0,0,0,0"
                           Text="Set Midpoint XY:" VerticalAlignment="Center"
                           Tag="Press this keybind to record your cursor’s current position as the WASD midpoint. Then use the arrow keys to nudge it pixel-by-pixel (e.g. between your character’s feet)."
                           Style="{StaticResource UnderlinedTextBlockStyle}"
                           Visibility="{Binding EnableSetMidpoint, Converter={StaticResource BoolToVisibilityConverter}}"/>
                <TextBlock Visibility="{Binding EnableSetMidpoint, Converter={StaticResource BoolToVisibilityConverter}}" Grid.Row="0" Grid.Column="2"
                           Tag="Adjust your midpoint X-Axis by pressing the left and right arrow keys. The midpoint X-Axis is the horizontal position of your cursor in WASD mode."
                           Style="{StaticResource UnderlinedTextBlockStyle}"
                           Text="Set X-Axis" VerticalAlignment="Center" Margin="40, 0, 0, 0"/>
                <StackPanel Visibility="{Binding EnableSetMidpoint, Converter={StaticResource BoolToVisibilityConverter}}" Grid.Row="1" Grid.Column="2" Orientation="Horizontal" VerticalAlignment="Center" Margin="16,0,0,0">
                  <Button Style="{StaticResource ModernButton}" Content="←" Width="24" Height="24"/>
                  <TextBox Width="50"
                           Style="{StaticResource ModernTextBox}"

                           IsEnabled="False"
                           Text="{Binding MidpointXDisplay, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                           HorizontalContentAlignment="Center"
                           Margin="4,0"/>
                  <Button Style="{StaticResource ModernButton}" Content="→" Width="24" Height="24" />
                  <TextBlock
                             Text="Left and Right Arrow Keys" VerticalAlignment="Center" Margin="6, 0, 0, 0"/>
                </StackPanel>
                <TextBlock Visibility="{Binding EnableSetMidpoint, Converter={StaticResource BoolToVisibilityConverter}}"
                           Tag="Adjust your midpoint Y-Axis by pressing the up and down arrow keys. The midpoint Y-Axis is the vertical position of your cursor in WASD mode."
                           Style="{StaticResource UnderlinedTextBlockStyle}"
                           Grid.Row="2" Grid.Column="2" Text="Set Y-Axis" VerticalAlignment="Center" Margin="40, 0, 0, 0"/>
                <StackPanel Visibility="{Binding EnableSetMidpoint, Converter={StaticResource BoolToVisibilityConverter}}" Grid.Row="3" Grid.Column="2" Orientation="Horizontal" VerticalAlignment="Center" Margin="16,0,0,0">
                  <Button Style="{StaticResource ModernButton}" Content="↓" Width="24" Height="24"/>
                  <TextBox Width="50"
                           Style="{StaticResource ModernTextBox}"

                           IsEnabled="False"
                           Text="{Binding MidpointYDisplay, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                           HorizontalContentAlignment="Center"
                           Margin="4,0"/>
                  <Button Style="{StaticResource ModernButton}" Content="↑" Width="24" Height="24" />
                  <TextBlock
                    Text="Up and Down Arrow Keys" VerticalAlignment="Center" Margin="6, 0, 0, 0"/>
                </StackPanel>

                
                <bgFunctionalities:KeyCaptureBox
                  Grid.Row="2"
                  Style="{StaticResource ModernTextBox}"

                  Grid.Column="1"
                  Margin="10,4,0,4"
                  MinHeight="24"
                  SelectedKey="{Binding SetMidpointKey.DisplayKey, Mode=TwoWay}" 
                  Visibility="{Binding EnableSetMidpoint, Converter={StaticResource BoolToVisibilityConverter}}"/>
                <TextBlock 
                  Tag="Resets back to your automatic calculated midpoint."
                  Style="{StaticResource UnderlinedTextBlockStyle}"
                  Grid.Column="0" Grid.Row="3" Text="Calculate Midpoint:" VerticalAlignment="Center" Margin="0,0,0,0" Visibility="{Binding EnableSetMidpoint, Converter={StaticResource BoolToVisibilityConverter}}"/>
                <Button Style="{StaticResource ModernButton}" Grid.Column="1" Grid.Row="3"
                        Width="30" Height="30" Margin="8,0,0,0"
                        Content="↩"
                        Command="{Binding ResetMidPointCommand}"
                        Visibility="{Binding EnableSetMidpoint, Converter={StaticResource BoolToVisibilityConverter}}"/>

              </Grid>
            </StackPanel>
              </StackPanel>
              
            </Border>
          </Expander>

          <Expander   
            Style="{StaticResource MaterialGroupExpander}" IsExpanded="False" Foreground="White" Margin="0,0,0,16">
            <Expander.Header>
              <TextBlock
                Style="{StaticResource UnderlinedTextBlockStyle}"
                Text="Virtual Cursor Customization (Sync, Rezise, and Replace)"
                Tag="This is an important setting that everyone should utilize. Your virtual cursor will likely always be slightly off from your real cursor, tip to tip. You need to adjust your virtual cursor to have its tip exactly where your real cursors tip is.&#10;&#10;This is important so that when you need precise clicks with your virtual cursor (like snap looting or menu clicks), it lines up exactly where it should. This is also extremely helpful if you decide to use a custom cursor, as it will allow you to ensure that the custom cursor is synced correctly to your real cursor, no matter how wack your custom cursor is." />
            </Expander.Header>
            <Expander.HeaderTemplate>
              <DataTemplate>
                <DockPanel>
                  <TextBlock Text="{Binding}" FontWeight="Bold" />
                </DockPanel>
              </DataTemplate>
            </Expander.HeaderTemplate>
            <Border Padding="8">            <Grid >
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>

              </Grid.ColumnDefinitions>
              <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>

              </Grid.RowDefinitions>
              <Grid Margin="0">
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="Auto"/>
                  <ColumnDefinition Width="Auto"/>
                  <ColumnDefinition Width="Auto"/>
                  <ColumnDefinition Width="Auto"/>
                  <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                  <RowDefinition Height="Auto"/>
                  <RowDefinition Height="Auto"/>
                  <RowDefinition Height="Auto"/>
                  <RowDefinition Height="Auto"/>
                  <RowDefinition Height="Auto"/>

                </Grid.RowDefinitions>

                <TextBlock 
                  Tag="Adjust your virtual cursor X-Axis by pressing the left and right arrow keys."
                  Style="{StaticResource UnderlinedTextBlockStyle}"
                  Visibility="{Binding OverlayEnabled, Converter={StaticResource BoolToVisibilityConverter}}" Grid.Row="0" Grid.Column="1"  Text="X-Axis:" VerticalAlignment="Center" Margin="8, 0, 0, 0"/>
                <StackPanel Visibility="{Binding OverlayEnabled, Converter={StaticResource BoolToVisibilityConverter}}" Grid.Row="0" Grid.Column="2" Orientation="Horizontal" VerticalAlignment="Center" Margin="16,0,0,0">
                  <Button Style="{StaticResource ModernButton}" Content="←" Width="24" Height="24"/>
                  <TextBox Width="50"
                           Style="{StaticResource ModernTextBox}"

                           Text="{Binding XCursorCenter, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                           HorizontalContentAlignment="Center"
                           Margin="4,0"/>
                  <Button Style="{StaticResource ModernButton}" Content="→" Width="24" Height="24" />
                </StackPanel>
                <TextBlock Grid.Row="1" Grid.Column="2"
                           Visibility="{Binding OverlayEnabled, Converter={StaticResource BoolToVisibilityConverter}}"
                           Text="Left and Right Arrow Keys" VerticalAlignment="Center" Margin="0, 0, 0, 0"/>
                <TextBlock
                  Tag="Adjust your virtual cursor Y-Axis by pressing the up and down arrow keys."
                  Style="{StaticResource UnderlinedTextBlockStyle}"
                  Visibility="{Binding OverlayEnabled, Converter={StaticResource BoolToVisibilityConverter}}" Grid.Row="2" Grid.Column="1" Text="Y-Axis:" VerticalAlignment="Center" Margin="8, 0, 0, 0"/>
                <StackPanel Visibility="{Binding OverlayEnabled, Converter={StaticResource BoolToVisibilityConverter}}" Grid.Row="2" Grid.Column="2" Orientation="Horizontal" VerticalAlignment="Center" Margin="16,0,0,0">
                  <Button Style="{StaticResource ModernButton}" Content="↓" Width="24" Height="24"/>
                  <TextBox Width="50"
                           Style="{StaticResource ModernTextBox}"

                           Text="{Binding YCursorCenter, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                           HorizontalContentAlignment="Center"
                           Margin="4,0"/>
                  <Button Style="{StaticResource ModernButton}" Content="↑" Width="24" Height="24"/>
                </StackPanel>
                <TextBlock Grid.Row="3" Grid.Column="2"
                           Visibility="{Binding OverlayEnabled, Converter={StaticResource BoolToVisibilityConverter}}"
                           Text="Up and Down Arrow Keys" VerticalAlignment="Center" Margin="0, 0, 0, 0"/>

                
                <TextBlock Grid.Row="0" Grid.Column="0"
                           Style="{StaticResource UnderlinedTextBlockStyle}" 
                           Tag="NoUnderline"
                           Text="{Binding OverlayEnabled, Converter={StaticResource BoolToText}, ConverterParameter='Disable Virtual Overlay:|Enable Virtual Overlay:'}"
                           VerticalAlignment="Center"/>

                <bgFunctionalities:KeyCaptureBox
                  Style="{StaticResource ModernTextBox}"

                  Grid.Row="1" Grid.Column="0"
                  Margin="0,4,0,0"
                  MinHeight="24"
                  SelectedKey="{Binding CenterOverlayKey.DisplayKey, Mode=TwoWay}" />
                <Button
                  Width="150" Height="24"
                  Margin="0,4,0,0"
                  Visibility="{Binding OverlayEnabled, Converter={StaticResource BoolToVisibilityConverter}}"
                  Grid.Column="0" Grid.Row="3"
                  Content="Upload Custom Cursor"
                  Style="{StaticResource ModernButton}"
                  Command="{Binding UploadCursorCommand}" />
                <TextBlock 
                  Tag="NoUnderline"
                  Style="{StaticResource UnderlinedTextBlockStyle}" 
                  Grid.Column="3" Grid.Row="0"
                  Visibility="{Binding OverlayEnabled, Converter={StaticResource BoolToVisibilityConverter}}"
                  Text="Virtual Cursor Size:" VerticalAlignment="Center"/>

                <Slider                  
                  Grid.Column="3" Grid.Row="1"
                                        Style="{StaticResource ModernSlider}"
                                          Margin="8,0"
                                          Minimum="10" Maximum="512"
                                          TickFrequency="1"
                                          IsSnapToTickEnabled="True"
                  Visibility="{Binding OverlayEnabled, Converter={StaticResource BoolToVisibilityConverter}}"
                                          Value="{Binding CursorSize, Mode=TwoWay}"/>
                <TextBox Width="50"
                         Style="{StaticResource ModernTextBox}"
                         Grid.Column="3" Grid.Row="2"
                         Text="{Binding CursorSize, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                         HorizontalContentAlignment="Center"
                         Margin="4,0"
                         Visibility="{Binding OverlayEnabled, Converter={StaticResource BoolToVisibilityConverter}}"/>

              </Grid>
            </Grid>
            </Border>
          </Expander>
          <Expander           Style="{StaticResource MaterialGroupExpander}" Header="Actions" IsExpanded="True" Foreground="White" Margin="0,0,0,16">
            <Expander.HeaderTemplate>
              <DataTemplate>
                <DockPanel>
                  <TextBlock Text="{Binding}" FontWeight="Bold" />
                </DockPanel>
              </DataTemplate>
            </Expander.HeaderTemplate>
            <Border Padding="8">            <StackPanel>
              <Grid>
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="Auto"/>
                  <ColumnDefinition Width="Auto"/>
                  <ColumnDefinition Width="Auto"/>
                  <ColumnDefinition Width="Auto"/>
                  <ColumnDefinition Width="Auto"/>
                  <ColumnDefinition Width="Auto"/>
                  <ColumnDefinition Width="Auto"/>
                  <ColumnDefinition Width="Auto"/>

                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                  <RowDefinition Height="Auto"/>
                  <RowDefinition Height="Auto"/>
                  <RowDefinition Height="Auto"/>
                  <RowDefinition Height="Auto"/>
                  <RowDefinition Height="Auto"/>

                </Grid.RowDefinitions>

                <TextBlock
                  Style="{StaticResource UnderlinedTextBlockStyle}" 
                  Tag="NoUnderline"
                  Grid.Column="0" Grid.Row="0" Text="Save/Apply:" VerticalAlignment="Center" Margin="0,0,0,0"/>
                <Button Style="{StaticResource ModernButton}" Grid.Column="1" Grid.Row="0" Width="30" Height="30" Margin="8,0"
                        Content="✔" Command="{Binding SaveCommand}"/>
                <TextBlock
                  Style="{StaticResource UnderlinedTextBlockStyle}" 
                  Tag="NoUnderline"
                  Grid.Column="2" Grid.Row="0" Text="Reset to Last Save:" VerticalAlignment="Center"/>
                <Button Style="{StaticResource ModernButton}" Grid.Column="3" Grid.Row="0" Width="30" Height="30" Margin="8,0" Content="↻" Command="{Binding ResetAllCommand}"/>
                <TextBlock
                  Style="{StaticResource UnderlinedTextBlockStyle}" 
                  Tag="NoUnderline"
                  Grid.Column="4" Grid.Row="0" Text="Reset to Default:" VerticalAlignment="Center" Margin="4,0,0,0"/>
                <Button Style="{StaticResource ModernButton}"
                        Grid.Column="5" Grid.Row="0"
                        Width="30" Height="30"
                        Margin="8,0"
                        Command="{Binding ResetAllDefaultCommand}"
                        ToolTip="Reset to Default">
                  <iconPacks:PackIconMaterial
                    Kind="Restore"
                    Width="16" Height="16"/>
                </Button>
                <TextBlock
                  Tag="Opens your local folder where PathOfWASD saves its data. Your settings and cursor files are stored here."
                  Style="{StaticResource UnderlinedTextBlockStyle}"
                  Grid.Column="6" Grid.Row="0"
                  Text="Local Folder:"
                  VerticalAlignment="Center"
                  Margin="4,0,0,0"/>
  
                <Button
                  Style="{StaticResource ModernButton}"
                  Grid.Column="7" Grid.Row="0"
                  Width="30" Height="30"
                  Margin="8,0"
                  Command="{Binding OpenLocalFolderCommand}"
                  ToolTip="Open PathOfWASD data folder">
                  <iconPacks:PackIconMaterial
                    Kind="FolderOpen"
                    Width="16" Height="16"/>
                </Button>
              </Grid>
            </StackPanel>
            </Border>
          </Expander>
        </StackPanel>
      </ScrollViewer>
      <TextBlock Grid.Row="2"
                 Text="v1.0.0"                
                 Margin="0,0,12,8"            
                 HorizontalAlignment="Right"
                 Foreground="White"
                 FontSize="12"/>

      <StackPanel Grid.Row="2" Orientation="Horizontal" VerticalAlignment="Center">
        <iconPacks:PackIconMaterial
          
          Kind="Information"
          Width="16" Height="16"
          Margin="8,0,6,0"
          Foreground="White"
          VerticalAlignment="Center"/>
        <TextBlock Text="Disclaimer"
                   Tag="Disclaimer: This is a third party application and is not affiliated with Grinding Gear Games. Use at your own risk. I am not responsible for any bans or issues that may arise from using this application."
                   Style="{StaticResource UnderlinedTextBlockStyle}"
                   Foreground="White"
                   VerticalAlignment="Center"/>
      </StackPanel>
      <Border Grid.Row="2"
              Background="#33FF0000" 
              Height="32"
              VerticalAlignment="Bottom"
              HorizontalAlignment="Stretch"
              Visibility="{Binding HasUnappliedChanges, Converter={StaticResource BoolToVisibilityConverter}}"
              CornerRadius="6">
        
        <TextBlock Text="You have unapplied changes"
                   VerticalAlignment="Center"
                   HorizontalAlignment="Center"
                   Foreground="White"
                   FontWeight="Bold"
                   FontSize="14"/>
      </Border>
    </Grid>
  </Border>
</Window>